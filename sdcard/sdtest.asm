; SDCARD
; MINIDOS-compatible driver in ROM $F000

; for MIKBUG
MONITR	EQU	$E0E3
PUTC	EQU	$E075
GETC	EQU	$E078
OUTS	EQU	$E0CC
OUTHL	EQU	$E067
OUTHR	EQU	$E06B
BADDR	EQU	$E047
BYTE	EQU	$E055

SDINIT	EQU	$F000
RDSECT	EQU	$F003
WRSECT	EQU	$F006

NDRIVE	EQU	$0D
TRACK	EQU	$00
SECTOR	EQU	$01

STACK	EQU	$7FFF

	ORG	$0100
START	LDS	#STACK
	JMP	MAIN

intros	.asciz	"\r\nSDCARD Demo\r\n"
inits	.asciz	"initialising SD CARD..."
dones	.ascii	"done."
crlfs	.asciz	"\r\n"

MAIN	LDX	#intros
	JSR	PUTS

	LDX	#inits
	JSR	PUTS

	JSR	SDINIT
	BCS	FAIL

	LDX	#dones
	JSR	PUTS

LOOP	LDAA	#'#'
	JSR	PUTC
	LDAA	#' '
	JSR	PUTC
	JSR	GETC
	PSHA
	LDX	#crlfs
	JSR	PUTS
	PULA

1:	CMPA	#'R'		; read
	BNE	1f
	JSR	READ
	BRA	LOOP

1:	CMPA	#'I'		; reset
	BNE	1f
	JSR	SDINIT
	JMP	LOOP

1:	CMPA	#'W'		; write
	BNE	1f
	JSR	WRITE
	JMP	LOOP

1:	CMPA	#'P'		; print
	BNE	1f
	JSR	PRINT_SECTOR
	JMP	LOOP

1:	CMPA	#'X'		; exit
	BNE	1f
	JMP	MONITR

1:	JMP	LOOP

FAIL	JSR	PUTC
	LDX	#notf
	JSR	PUTS
	JSR	.
	JSR	MONITR

notf	.asciz	"SDCARD Driver not found\r\n"
msg1	.asciz	"ENTER DRIVE/TRACK/SECTOR: "
msg2	.asciz	"TARGET ADDRESS? "
msg3	.asciz	"SOURCE ADDRESS? "


WRITE	LDX	#msg1
	JSR	PUTS
	JSR	BYTE
	STAA	NDRIVE
	JSR	OUTS
	JSR	BYTE
	STAA	TRACK
	JSR	OUTS
	JSR	BYTE
	STAA	SECTOR
	JSR	OUTS
	LDX	#msg3
	JSR	PUTS
	JSR	BADDR
	JSR	OUTCR
	JSR	WRSECT
	RTS

READ	LDX	#msg1
	JSR	PUTS
	JSR	BYTE
	STAA	NDRIVE
	JSR	OUTS
	JSR	BYTE
	STAA	TRACK
	JSR	OUTS
	JSR	BYTE
	STAA	SECTOR
	JSR	OUTS
	LDX	#msg2
	JSR	PUTS
	JSR	BADDR
	JSR	OUTCR
	JSR	RDSECT
	RTS

PRINT_SECTOR:
	LDX	#msg3
	JSR	PUTS
	JSR	BADDR
	JSR	OUTCR
	JSR	PRINT_PAGE
	JSR	PRINT_PAGE
	RTS

PRINT_PAGE:
	CLRB
1:	LDAA	,X
	JSR	PUTHEX
	LDAA	#' '
	JSR	PUTC
	INX
	DECB
	BNE	1b
	RTS

1:	JSR	PUTC
	INX
PUTS	LDAA	0,X
	BNE	1b
	RTS

OUTCR	LDAA	#$0D
	JSR	PUTC
	LDAA	#$0A
	JMP	PUTC

PUTHEX	PSHA
	PSHA
	JSR	OUTHL
	PULA
	JSR	OUTHR
	PULA
	RTS

	END
